# helm repo add prefecthq https://prefecthq.github.io/server
# helm upgrade --install prefect -n prefect prefecthq/prefect-server -f values.yaml --version 2022.09.07
serverVersionTag: core-0.15.9

prefectVersionTag: 0.15.9

uiVersionTag: latest

imagePullSecrets: []

annotations: {}

postgresql:
  postgresqlDatabase: prefect
  postgresqlUsername: prefect
  existingSecret: postgresql-password
  servicePort: 5432
  externalHostname: cloud-sql-proxy
  useSubChart: false

  persistence:
    enabled: false
    size: 8Gi

  initdbUser: postgres

  initdbScripts:
    create_pgcrypto.sql: |
      -- create pgcrypto extension, required for Hasura UUID
      CREATE EXTENSION IF NOT EXISTS pgcrypto;
      CREATE EXTENSION IF NOT EXISTS "pg_trgm";
      SET TIME ZONE 'UTC';

prefectConfig:
  services:
    towel:
      max_scheduled_runs_per_flow: '50'

hasura:
  image:
    name: hasura/graphql-engine
    tag: v2.8.1
    pullPolicy: IfNotPresent
    pullSecrets: []

  service:
    type: ClusterIP
    port: 3000

  labels: {}
  annotations: {}
  replicas: 1
  strategy: {}
  podSecurityContext: {}
  securityContext: {}
  env: []
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}

graphql:
  image:
    name: prefecthq/server
    tag:
    pullPolicy: Always
    pullSecrets: []

  service:
    type: ClusterIP
    port: 4201

  labels: {}
  annotations: {}
  replicas: 2
  strategy: {}
  podSecurityContext: {}
  securityContext: {}
  env: {}
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

  init:
    env: {}
    resources: {}

apollo:
  image:
    name: prefecthq/apollo
    tag:
    pullPolicy: Always
    pullSecrets: []

  options:
    telemetryEnabled: true

  service:
    type: ClusterIP
    port: 4200

  ingress:
    enabled: false
    annotations: {}
    labels: {}
    hosts: []
    path: /

  labels: {}
  annotations: {}
  replicas: 2
  strategy: {}
  podSecurityContext: {}
  securityContext: {}
  env: {}
  resources:
    requests:
      cpu: 300m
      memory: 256Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

ui:
  image:
    name: prefecthq/ui
    tag:
    pullPolicy: Always
    pullSecrets: []

  apolloApiUrl: https://prefect.basedosdados.org/api

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    annotations: {}
    labels: {}
    hosts: []
    path: /

  labels: {}
  annotations: {}
  replicas: 1
  strategy: {}
  podSecurityContext: {}
  securityContext: {}
  env: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

towel:
  image:
    name: prefecthq/server
    tag:
    pullPolicy: Always
    pullSecrets: []

  labels: {}
  annotations: {}
  replicas: 1
  strategy: {}
  podSecurityContext: {}
  securityContext: {}
  env: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

agent:
  enabled: true
  prefectLabels:
  - basedosdados-dev
  jobTemplateFilePath: https://storage.googleapis.com/basedosdados-dev/prefect_job_template/template.yaml
  image:
    name: prefecthq/prefect
    tag:
    pullPolicy: Always
    pullSecrets: []

  labels: {}
  annotations: {}
  replicas: 1
  strategy: {}
  podSecurityContext: {}
  securityContext: {}
  env: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  resources:
    limits:
      cpu: 100m
      memory: 128Mi

  job:
    resources:
      limits:
        memory: ''
        cpu: ''
      requests:
        memory: ''
        cpu: ''
    imagePullPolicy: ''
    imagePullSecrets: []

serviceAccount:
  create: true
  name:

jobs:
  createTenant:
    enabled: false
    tenant:
      name: default
      slug: default
    image:
      name: prefecthq/prefect
      tag:
      pullPolicy: Always
      pullSecrets: []
    labels: {}
    annotations: {}
    podSecurityContext: {}
    securityContext: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}
    backoffLimit: 10
